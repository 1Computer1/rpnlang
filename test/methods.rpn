math << 'stdlib[math]';

random_numbers >> (amount) => ([(i) => (100 math::random@ math::floor@ 1 +) @& (e, i) => ($i $amount ==)]);

is_prime >> (num) => (
    $num math::sqrt@ math::floor@ 2 (sqnum, i) => ({
        $num $i % 0 == : !?,
        $i $sqnum >= : $num 1 !=,
        !! : $sqnum $i 1 + $@
    })@
);

quicksort >> (...nums) => ({
    $nums [?] 0 == : [],
    !! : $[nums, 0] (first) => (
        (#@ $[nums, 1,] [(e, i) => ($e $first >) #|] ::quicksort#@)
        $first
        (#@ $[nums, 1,] [(e, i) => ($e $first <=) #|] ::quicksort#@)
    )#@
});

test #> 3 2 1;
